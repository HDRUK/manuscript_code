### association between blood PRS and disease status in UKBB ### 

R
setwd("/lustre/scratch115/projects/ukbb500k_t151")
dis=read.table("/lustre/scratch115/projects/ukbb500k_t151/rotation_project/data/inputs_and_outputs/190321_ukbb_blood_disorders_ID_and_ICD_code.txt", he=T, strings=F)
link=read.table("rotation_project/data/raw/13745_7439conv.tsv", he=T, strings=F)
dis$other_id=link$f.eid_7439[match(dis$eid, link$f.eid_13745)]
pheno=scan("risk_score/results_ukbb_final/snp_lists/pheno_list.txt","char")

## get PCs
pcs=read.csv(pipe("cut -d\",\" -f1,3,11-21 ukbb_data/ukb_sampleQC.csv"), he=T, strings=F)
names(pcs)=c("eid","sex","PC1","PC2","PC3","PC4","PC5","PC6","PC7","PC8","PC9","PC10","PC11")
## get people excluded from GWAS 
phen=read.table("BOLT_analysis/reference/ukbb_500k_final_newsex.sample", he=T, strings=F)
age=read.table(pipe("cut -f1,3 blood_counts/tech_adj_only.tsv"), he=T, strings=F)


# get list of traits to test, do this after creating the first "mer" dataset below

A=as.data.frame(table(mer$extract))
#A=as.data.frame(table(dis$extract))
A=A[order(A$Freq, decreasing=T),]
test=unlist(strsplit(as.character(A$Var1[which(A$Freq>20)]), ","))
test=unique(as.character(test))
fin=data.frame(pheno=NA, disease=NA, OR=NA, CI_low=NA, CI_high=NA, p_val=NA, N_cases=NA, N_controls=NA)

## account for confounders
for(ph in pheno){
sc=read.table(paste("rotation_project/data/inputs_and_outputs/",ph,"_ukbb_condind_common_190520.profile",sep=""), he=T, strings=F)
sc$TOT=apply(sc[,grep("SCORESUM",names(sc))], 1, sum)
sc$TOT_norm=(sc$TOT-mean(sc$TOT))/sd(sc$TOT)
mer=merge(sc, dis, by.x="IID", by.y="other_id")
mer=mer[,c("IID", "TOT_norm","eid","extract")]
mer=merge(mer, pcs, by="eid")
mer=merge(mer, phen[,c("IID", paste(ph,"_gwas_normalised",sep=""))], by="IID")
mer=merge(mer, age, by.x="eid", by.y="subject_id")

sink(paste("risk_score/clin_annot/PRS_and_disease_output_",ph,"_clean_with_age.txt",sep=""))
for(i in 1:length(test)){
mer$test=0
mer$test[grep(test[i], mer$extract)]=1
mer$test[which(!is.na(mer[,paste(ph,"_gwas_normalised",sep="")]))]=NA

#check for other confounding disorders 
B0=data.frame(table(unlist(strsplit(mer$extract[which(mer$test==0)],","))))
B1=data.frame(table(unlist(strsplit(mer$extract[which(mer$test==1)],","))))
conf0=as.character(B0[which(B0$Freq>length(which(mer$test==0))/10),"Var1"])
conf1=as.character(B1[which(B1$Freq>length(which(mer$test==1))/10),"Var1"])
conf=unique(c(conf0, conf1))
conf=conf[which(conf!=test[i])]
for(j in 1:length(conf)){
mer[,paste("cov",j,sep="")]=0
mer[grep(conf[j], mer$extract),paste("cov",j,sep="")]=1
}

# formula
form=paste("mer$test~mer$TOT_norm+mer$sex+mer$age_acq+mer$PC1+mer$PC2+mer$PC3+mer$PC4+mer$PC5+mer$PC6+mer$PC7+mer$PC8+mer$PC9+mer$PC10",paste("factor(mer$cov",c(1:length(conf)),")",sep="",collapse="+"),sep="+")

mod=glm(as.formula(form), family="binomial")
p_val=summary(mod)$coefficients[2,4]
if(!is.na(p_val) & p_val<0.05){
exp(cbind(coef(mod), confint(mod)))->pippo
poi=c(ph, test[i], pippo[2,], p_val, length(which(mer$test==1)), length(which(mer$test==0)))
fin=rbind(fin, poi)
}}
sink()
}


dat <- data.frame(group = factor(c("A","B")), or = c(0.83706749, 0.918489742), lcl = c(0.766689803,0.863321324), ucl = c(0.913588168,0.977111899),pvalue = c(6.96E-05, 0.007098534))
# transform odd ratios to log odds ratios
dat$yi <- log(dat$or)
# convert p-values into the z-values
dat$zi <- sign(dat$yi) * qnorm(dat$pvalue/2, lower.tail=FALSE)
# standard errors = OR/Z-score
dat$sei <- dat$yi / dat$zi
# sampling variances
dat$vi <- dat$sei^2
# fit a random-effects model to these data
res <- rma(yi, vi, data=dat) #yi=log(OR), vi=variance
res = rma.mv(yi, vi, data=dat, method="REML", level=95)

Multivariate Meta-Analysis Model (k = 2; method: REML)

Variance Components: none

Test for Heterogeneity:
Q(df = 1) = 2.8755, p-val = 0.0899

Model Results:

estimate      se     zval    pval    ci.lb    ci.ub 
 -0.1159  0.0258  -4.4938  <.0001  -0.1665  -0.0654  *** 

---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1


### plot PGS effect on plt
DIR=
/lustre/scratch115/projects/ukbb500k_t151/
R
sc=read.table("risk_score/UKBB_all_risk_score/plt_ukbb_condind_common_rs_adjusted.profile", he=T, strings=F)
phen=read.table("blood_counts/tech_adj_only.tsv", he=T, strings=F)
link=read.table("rotation_project/data/raw/13745_7439conv.tsv", he=T, strings=F)
sc$other_id=link$f.eid_13745[match(sc$IID, link$f.eid_7439)]
names(sc)[28]="TOT"
sc$TOT_norm=(sc$TOT-mean(sc$TOT))/sd(sc$TOT)
sc$quint=cut(sc$TOT_norm, quantile(sc$TOT_norm, c(0,0.2,0.4,0.6,0.8,1)))
mer=merge(sc, phen[,c("subject_id","plt_tech_adj")], by.x="other_id",by.y="subject_id")

pdf("risk_score/clin_annot/GP9_PRS_below_2SD.pdf")
plot(density(na.omit(mer$plt_tech_adj[which(mer$TOT_norm<(-2))])), xlim=c(0,500), col="red")
points(density(na.omit(mer$plt_tech_adj[which(mer$TOT_norm>=2)])), type="l")
dev.off()


## plot UKBB GP9 carriers on the pheno curve ###

phen=read.table("blood_counts/tech_adj_only.tsv", he=T , strings=F)

gp9=scan(pipe("fgrep -w rs5030764 /lustre/scratch115/projects/ukbb500k_t151/rotation_project/PLINK_files/*.rlist | grep HET"), "char")
gp9=gp9[5:length(gp9)]
gp9=unique(gp9) #338

# PGS 
sc=read.table("risk_score/UKBB_all_risk_score/plt_ukbb_condind_common_rs_adjusted.profile", he=T, strings=F)
names(sc)[28]="TOT"
sc$TOT_norm=(sc$TOT-mean(sc$TOT))/sd(sc$TOT)

link=read.table("rotation_project/data/raw/13745_7439conv.tsv", he=T, strings=F)
phen=merge(phen, link, by.x="subject_id", by.y="f.eid_13745")
phen=phen[,c(1,2,27,28,43)]

mer=merge(phen, sc[,c("IID","TOT_norm")], by.x="f.eid_7439", by.y="IID")

# plot 
pdf("risk_score/results_ukbb_final/plt_mpv_for_willem/plt_distrib_with_GP9_carriers_divided_by_l10_t10_pltPGS_with_dist_new_cols.pdf", width=5, height=5)
plot(density(na.omit(mer$plt_tech_adj)), xlim=c(0,500), cex.axis=1.3, cex=3, xlab="Platelet Count", main="rs5030764 (GP9)")
points(density(na.omit(mer$plt_tech_adj[which(mer$f.eid_7439 %in% gp9)])), type="l", lty=2, cex=3)
points(x=mer$plt_tech_adj[which(mer$f.eid_7439 %in% gp9 & mer$TOT_norm<(-1.27))], y=rep(0, length(mer$plt_tech_adj[which(mer$f.eid_7439 %in% gp9 & mer$TOT_norm<(-1.27))])), pch="I", col="mediumpurple1", cex=2.5)
points(x=mer$plt_tech_adj[which(mer$f.eid_7439 %in% gp9 & mer$TOT_norm>(1.29))], y=rep(0, length(mer$plt_tech_adj[which(mer$f.eid_7439 %in% gp9 & mer$TOT_norm>(1.29))])), pch="I", col="mediumspringgreen", cex=2.5)
legend("topright",c("reference (UKB)","all GP9 carriers","GP9 carriers\nwith low PGS", "GP9 carriers\nwith high PGS"), pch=c(NA,NA,"I","I"),lty=c(1,2,NA,NA) ,col=c("black","black","mediumpurple1","mediumspringgreen"),y.intersp=1.5)
abline(v=150)
segments(x0=50, x1=50, y0=0, y1=0.002)
segments(x0=42, x1=42, y0=0, y1=0.002)
segments(x0=66, x1=66, y0=0, y1=0.002)
dev.off()



